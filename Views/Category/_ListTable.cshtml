@using BookInfo.Models;
@model IOrderedQueryable<Category>;

@* Returns partial view of table of categories, filtered in the controller by a search string *@

@if (Model.Count() == 0)
{
    <em>
        @if (ViewBag.hasItems == false)
        {
            <h3>There are currently no categories</h3>
        }
        else
        {
            <h3>Invalid search</h3>
        }
    </em>
}
else
{
    <table class="text-center align-middle table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th></th>
                <th>Category Name</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int i = 0;
            }
            @foreach (var obj in Model)
            {
                i++;
                <tr>
                    <td width="5%">@i</td>
                    <td width="20%"><a asp-controller="Cateogry" asp-action="Index" asp-route-id="@obj.CategoryId">@obj.Name</a>
                    </td>
                    <td width="55%"><em>@obj.Description</em></td>
                    <td>
                        <div class="btn-group text" role="group">
                            <a asp-controller="Category" asp-action="Edit" asp-route-id="@obj.CategoryId"
                        class="btn btn-primary mx-2">
                                <i class="bi bi-pencil"></i>&nbsp;&nbsp;Edit</a>
                            <a asp-controller="Category" asp-action="Delete" asp-route-id="@obj.CategoryId"
                        class="btn btn-danger mx-2">
                                <i class="bi bi-trash-fill"></i>&nbsp;&nbsp;Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}